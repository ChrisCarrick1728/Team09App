/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.chilkatsoft;

public class CkZipCrc {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected CkZipCrc(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CkZipCrc obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        chilkatJNI.delete_CkZipCrc(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public CkZipCrc() {
    this(chilkatJNI.new_CkZipCrc(), true);
  }

  public void LastErrorXml(CkString str) {
    chilkatJNI.CkZipCrc_LastErrorXml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void LastErrorHtml(CkString str) {
    chilkatJNI.CkZipCrc_LastErrorHtml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void LastErrorText(CkString str) {
    chilkatJNI.CkZipCrc_LastErrorText(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void put_EventCallbackObject(CkBaseProgress progress) {
    chilkatJNI.CkZipCrc_put_EventCallbackObject(swigCPtr, this, CkBaseProgress.getCPtr(progress), progress);
  }

  public void get_DebugLogFilePath(CkString str) {
    chilkatJNI.CkZipCrc_get_DebugLogFilePath(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String debugLogFilePath() {
    return chilkatJNI.CkZipCrc_debugLogFilePath(swigCPtr, this);
  }

  public void put_DebugLogFilePath(String newVal) {
    chilkatJNI.CkZipCrc_put_DebugLogFilePath(swigCPtr, this, newVal);
  }

  public void get_LastErrorHtml(CkString str) {
    chilkatJNI.CkZipCrc_get_LastErrorHtml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String lastErrorHtml() {
    return chilkatJNI.CkZipCrc_lastErrorHtml(swigCPtr, this);
  }

  public void get_LastErrorText(CkString str) {
    chilkatJNI.CkZipCrc_get_LastErrorText(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String lastErrorText() {
    return chilkatJNI.CkZipCrc_lastErrorText(swigCPtr, this);
  }

  public void get_LastErrorXml(CkString str) {
    chilkatJNI.CkZipCrc_get_LastErrorXml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String lastErrorXml() {
    return chilkatJNI.CkZipCrc_lastErrorXml(swigCPtr, this);
  }

  public boolean get_LastMethodSuccess() {
    return chilkatJNI.CkZipCrc_get_LastMethodSuccess(swigCPtr, this);
  }

  public void put_LastMethodSuccess(boolean newVal) {
    chilkatJNI.CkZipCrc_put_LastMethodSuccess(swigCPtr, this, newVal);
  }

  public boolean get_VerboseLogging() {
    return chilkatJNI.CkZipCrc_get_VerboseLogging(swigCPtr, this);
  }

  public void put_VerboseLogging(boolean newVal) {
    chilkatJNI.CkZipCrc_put_VerboseLogging(swigCPtr, this, newVal);
  }

  public void get_Version(CkString str) {
    chilkatJNI.CkZipCrc_get_Version(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String version() {
    return chilkatJNI.CkZipCrc_version(swigCPtr, this);
  }

  public void BeginStream() {
    chilkatJNI.CkZipCrc_BeginStream(swigCPtr, this);
  }

  public long CalculateCrc(CkByteData data) {
    return chilkatJNI.CkZipCrc_CalculateCrc(swigCPtr, this, CkByteData.getCPtr(data), data);
  }

  public long CrcBd(CkBinData bd) {
    return chilkatJNI.CkZipCrc_CrcBd(swigCPtr, this, CkBinData.getCPtr(bd), bd);
  }

  public long CrcSb(CkStringBuilder sb, String charset) {
    return chilkatJNI.CkZipCrc_CrcSb(swigCPtr, this, CkStringBuilder.getCPtr(sb), sb, charset);
  }

  public long CrcString(String str, String charset) {
    return chilkatJNI.CkZipCrc_CrcString(swigCPtr, this, str, charset);
  }

  public long EndStream() {
    return chilkatJNI.CkZipCrc_EndStream(swigCPtr, this);
  }

  public long FileCrc(String path) {
    return chilkatJNI.CkZipCrc_FileCrc(swigCPtr, this, path);
  }

  public CkTask FileCrcAsync(String path) {
    long cPtr = chilkatJNI.CkZipCrc_FileCrcAsync(swigCPtr, this, path);
    return (cPtr == 0) ? null : new CkTask(cPtr, true);
  }

  public void MoreData(CkByteData data) {
    chilkatJNI.CkZipCrc_MoreData(swigCPtr, this, CkByteData.getCPtr(data), data);
  }

  public boolean SaveLastError(String path) {
    return chilkatJNI.CkZipCrc_SaveLastError(swigCPtr, this, path);
  }

  public boolean ToHex(int crc, CkString outStr) {
    return chilkatJNI.CkZipCrc_ToHex(swigCPtr, this, crc, CkString.getCPtr(outStr), outStr);
  }

  public String toHex(int crc) {
    return chilkatJNI.CkZipCrc_toHex(swigCPtr, this, crc);
  }

}
