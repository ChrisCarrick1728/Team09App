/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.chilkatsoft;

public class CkXmlDSig {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected CkXmlDSig(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CkXmlDSig obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        chilkatJNI.delete_CkXmlDSig(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public CkXmlDSig() {
    this(chilkatJNI.new_CkXmlDSig(), true);
  }

  public void LastErrorXml(CkString str) {
    chilkatJNI.CkXmlDSig_LastErrorXml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void LastErrorHtml(CkString str) {
    chilkatJNI.CkXmlDSig_LastErrorHtml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void LastErrorText(CkString str) {
    chilkatJNI.CkXmlDSig_LastErrorText(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public void get_DebugLogFilePath(CkString str) {
    chilkatJNI.CkXmlDSig_get_DebugLogFilePath(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String debugLogFilePath() {
    return chilkatJNI.CkXmlDSig_debugLogFilePath(swigCPtr, this);
  }

  public void put_DebugLogFilePath(String newVal) {
    chilkatJNI.CkXmlDSig_put_DebugLogFilePath(swigCPtr, this, newVal);
  }

  public void get_LastErrorHtml(CkString str) {
    chilkatJNI.CkXmlDSig_get_LastErrorHtml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String lastErrorHtml() {
    return chilkatJNI.CkXmlDSig_lastErrorHtml(swigCPtr, this);
  }

  public void get_LastErrorText(CkString str) {
    chilkatJNI.CkXmlDSig_get_LastErrorText(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String lastErrorText() {
    return chilkatJNI.CkXmlDSig_lastErrorText(swigCPtr, this);
  }

  public void get_LastErrorXml(CkString str) {
    chilkatJNI.CkXmlDSig_get_LastErrorXml(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String lastErrorXml() {
    return chilkatJNI.CkXmlDSig_lastErrorXml(swigCPtr, this);
  }

  public boolean get_LastMethodSuccess() {
    return chilkatJNI.CkXmlDSig_get_LastMethodSuccess(swigCPtr, this);
  }

  public void put_LastMethodSuccess(boolean newVal) {
    chilkatJNI.CkXmlDSig_put_LastMethodSuccess(swigCPtr, this, newVal);
  }

  public int get_NumReferences() {
    return chilkatJNI.CkXmlDSig_get_NumReferences(swigCPtr, this);
  }

  public int get_NumSignatures() {
    return chilkatJNI.CkXmlDSig_get_NumSignatures(swigCPtr, this);
  }

  public int get_Selector() {
    return chilkatJNI.CkXmlDSig_get_Selector(swigCPtr, this);
  }

  public void put_Selector(int newVal) {
    chilkatJNI.CkXmlDSig_put_Selector(swigCPtr, this, newVal);
  }

  public boolean get_VerboseLogging() {
    return chilkatJNI.CkXmlDSig_get_VerboseLogging(swigCPtr, this);
  }

  public void put_VerboseLogging(boolean newVal) {
    chilkatJNI.CkXmlDSig_put_VerboseLogging(swigCPtr, this, newVal);
  }

  public void get_Version(CkString str) {
    chilkatJNI.CkXmlDSig_get_Version(swigCPtr, this, CkString.getCPtr(str), str);
  }

  public String version() {
    return chilkatJNI.CkXmlDSig_version(swigCPtr, this);
  }

  public boolean get_WithComments() {
    return chilkatJNI.CkXmlDSig_get_WithComments(swigCPtr, this);
  }

  public void put_WithComments(boolean newVal) {
    chilkatJNI.CkXmlDSig_put_WithComments(swigCPtr, this, newVal);
  }

  public boolean CanonicalizeFragment(String xml, String fragmentId, String version, String prefixList, boolean withComments, CkString outStr) {
    return chilkatJNI.CkXmlDSig_CanonicalizeFragment(swigCPtr, this, xml, fragmentId, version, prefixList, withComments, CkString.getCPtr(outStr), outStr);
  }

  public String canonicalizeFragment(String xml, String fragmentId, String version, String prefixList, boolean withComments) {
    return chilkatJNI.CkXmlDSig_canonicalizeFragment(swigCPtr, this, xml, fragmentId, version, prefixList, withComments);
  }

  public boolean CanonicalizeXml(String xml, String version, boolean withComments, CkString outStr) {
    return chilkatJNI.CkXmlDSig_CanonicalizeXml(swigCPtr, this, xml, version, withComments, CkString.getCPtr(outStr), outStr);
  }

  public String canonicalizeXml(String xml, String version, boolean withComments) {
    return chilkatJNI.CkXmlDSig_canonicalizeXml(swigCPtr, this, xml, version, withComments);
  }

  public CkXml GetKeyInfo() {
    long cPtr = chilkatJNI.CkXmlDSig_GetKeyInfo(swigCPtr, this);
    return (cPtr == 0) ? null : new CkXml(cPtr, true);
  }

  public CkPublicKey GetPublicKey() {
    long cPtr = chilkatJNI.CkXmlDSig_GetPublicKey(swigCPtr, this);
    return (cPtr == 0) ? null : new CkPublicKey(cPtr, true);
  }

  public boolean IsReferenceExternal(int index) {
    return chilkatJNI.CkXmlDSig_IsReferenceExternal(swigCPtr, this, index);
  }

  public boolean LoadSignature(String xmlSig) {
    return chilkatJNI.CkXmlDSig_LoadSignature(swigCPtr, this, xmlSig);
  }

  public boolean LoadSignatureBd(CkBinData binData) {
    return chilkatJNI.CkXmlDSig_LoadSignatureBd(swigCPtr, this, CkBinData.getCPtr(binData), binData);
  }

  public boolean LoadSignatureSb(CkStringBuilder sbXmlSig) {
    return chilkatJNI.CkXmlDSig_LoadSignatureSb(swigCPtr, this, CkStringBuilder.getCPtr(sbXmlSig), sbXmlSig);
  }

  public boolean ReferenceUri(int index, CkString outStr) {
    return chilkatJNI.CkXmlDSig_ReferenceUri(swigCPtr, this, index, CkString.getCPtr(outStr), outStr);
  }

  public String referenceUri(int index) {
    return chilkatJNI.CkXmlDSig_referenceUri(swigCPtr, this, index);
  }

  public boolean SaveLastError(String path) {
    return chilkatJNI.CkXmlDSig_SaveLastError(swigCPtr, this, path);
  }

  public boolean SetHmacKey(String key, String encoding) {
    return chilkatJNI.CkXmlDSig_SetHmacKey(swigCPtr, this, key, encoding);
  }

  public boolean SetPublicKey(CkPublicKey pubKey) {
    return chilkatJNI.CkXmlDSig_SetPublicKey(swigCPtr, this, CkPublicKey.getCPtr(pubKey), pubKey);
  }

  public boolean SetRefDataBd(int index, CkBinData binData) {
    return chilkatJNI.CkXmlDSig_SetRefDataBd(swigCPtr, this, index, CkBinData.getCPtr(binData), binData);
  }

  public boolean SetRefDataFile(int index, String path) {
    return chilkatJNI.CkXmlDSig_SetRefDataFile(swigCPtr, this, index, path);
  }

  public boolean SetRefDataSb(int index, CkStringBuilder sb, String charset) {
    return chilkatJNI.CkXmlDSig_SetRefDataSb(swigCPtr, this, index, CkStringBuilder.getCPtr(sb), sb, charset);
  }

  public boolean UseCertVault(CkXmlCertVault certVault) {
    return chilkatJNI.CkXmlDSig_UseCertVault(swigCPtr, this, CkXmlCertVault.getCPtr(certVault), certVault);
  }

  public boolean VerifyReferenceDigest(int index) {
    return chilkatJNI.CkXmlDSig_VerifyReferenceDigest(swigCPtr, this, index);
  }

  public boolean VerifySignature(boolean verifyReferenceDigests) {
    return chilkatJNI.CkXmlDSig_VerifySignature(swigCPtr, this, verifyReferenceDigests);
  }

}
